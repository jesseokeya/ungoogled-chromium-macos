# Fix GN safe_browsing and building with safebrowsing disabled on macOS

--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -1863,7 +1863,6 @@ jumbo_split_static_library("browser") {
   allow_circular_includes_from = [
     "//chrome/browser/ui",
     "//chrome/browser/ui/webui/bluetooth_internals",
-    "//chrome/browser/safe_browsing",
   ]
 
   public_deps = [
@@ -1910,7 +1909,6 @@ jumbo_split_static_library("browser") {
     "//chrome/browser/push_messaging:budget_proto",
     "//chrome/browser/resource_coordinator:mojo_bindings",
     "//chrome/browser/resource_coordinator:tab_manager_features",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/sharing/proto",
     "//chrome/browser/ssl:proto",
     "//chrome/browser/ui",
--- a/chrome/browser/extensions/BUILD.gn
+++ b/chrome/browser/extensions/BUILD.gn
@@ -749,9 +749,6 @@ jumbo_static_library("extensions") {
 
     # TODO(loyso): Remove this circular dependency. http://crbug.com/876576.
     "//chrome/browser/web_applications/extensions",
-
-    # TODO(crbug/925153): Remove this circular dependency.
-    "//chrome/browser/safe_browsing",
   ]
 
   # Since browser and browser_extensions actually depend on each other,
@@ -763,8 +760,6 @@ jumbo_static_library("extensions") {
     "//chrome/browser/extensions/api:api_registration",
     "//chrome/common",
     "//chrome/common/extensions/api",
-    "//components/safe_browsing:csd_proto",
-    "//components/safe_browsing/db:util",
     "//components/signin/core/browser",
     "//content/public/browser",
   ]
@@ -785,7 +780,6 @@ jumbo_static_library("extensions") {
     "//chrome/browser/media/router",
     "//chrome/browser/media/router/discovery",
     "//chrome/browser/resource_coordinator:mojo_bindings",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/web_applications/components",
     "//chrome/browser/web_applications/extensions",
     "//chrome/common/extensions/api:extensions_features",
@@ -830,10 +824,6 @@ jumbo_static_library("extensions") {
     "//components/proxy_config",
     "//components/rappor",
     "//components/resources",
-    "//components/safe_browsing:csd_proto",
-    "//components/safe_browsing:features",
-    "//components/safe_browsing/common:safe_browsing_prefs",
-    "//components/safe_browsing/db:database_manager",
     "//components/search_engines",
     "//components/services/unzip/public/cpp",
     "//components/sessions",
--- a/chrome/browser/ui/BUILD.gn
+++ b/chrome/browser/ui/BUILD.gn
@@ -351,15 +351,9 @@ jumbo_split_static_library("ui") {
     }
   }
 
-  if (safe_browsing_mode == 1) {
-    sources += [
-      "webui/reset_password/reset_password_ui.cc",
-      "webui/reset_password/reset_password_ui.h",
-    ]
-  }
 
   # TODO(crbug/925153): Remove this circular dependency.
-  allow_circular_includes_from = [ "//chrome/browser/safe_browsing" ]
+  allow_circular_includes_from = []
   defines = []
   libs = []
 
@@ -400,7 +394,6 @@ jumbo_split_static_library("ui") {
     "//chrome/browser/media:mojo_bindings",
     "//chrome/browser/notifications/scheduler/public",
     "//chrome/browser/profiling_host",
-    "//chrome/browser/safe_browsing",
     "//chrome/browser/ssl:proto",
     "//chrome/browser/ui/webui/bluetooth_internals",
     "//chrome/browser/ui/webui/downloads:mojo_bindings",
@@ -479,14 +472,6 @@ jumbo_split_static_library("ui") {
     "//components/rappor",
     "//components/renderer_context_menu",
     "//components/resources",
-    "//components/safe_browsing:features",
-    "//components/safe_browsing/common",
-    "//components/safe_browsing/common:safe_browsing_prefs",
-    "//components/safe_browsing/db:database_manager",
-    "//components/safe_browsing/db:util",
-    "//components/safe_browsing/password_protection",
-    "//components/safe_browsing/triggers:ad_popup_trigger",
-    "//components/safe_browsing/triggers:ad_redirect_trigger",
     "//components/safe_browsing/web_ui",
     "//components/search",
     "//components/search_engines",
@@ -3823,15 +3808,6 @@ jumbo_split_static_library("ui") {
     }
   }
 
-  if (safe_browsing_mode == 1) {
-    deps += [
-      "//chrome/browser/ui/webui/reset_password:mojo_bindings",
-      "//chrome/common/safe_browsing:proto",
-      "//components/safe_browsing:csd_proto",
-      "//components/safe_browsing/password_protection:password_protection_metrics_util",
-    ]
-  }
-
   if (use_dbus) {
     deps += [ "//dbus" ]
   }
--- a/chrome/browser/ui/webui/settings/change_password_handler.cc
+++ b/chrome/browser/ui/webui/settings/change_password_handler.cc
@@ -55,18 +55,18 @@ void ChangePasswordHandler::HandleInitia
 }
 
 void ChangePasswordHandler::HandleChangePassword(const base::ListValue* args) {
-  service_->OnUserAction(web_ui()->GetWebContents(),
-                         PasswordType::PRIMARY_ACCOUNT_PASSWORD,
-                         safe_browsing::WarningUIType::CHROME_SETTINGS,
-                         safe_browsing::WarningAction::CHANGE_PASSWORD);
+//  service_->OnUserAction(web_ui()->GetWebContents(),
+//                         PasswordType::PRIMARY_ACCOUNT_PASSWORD,
+//                         safe_browsing::WarningUIType::CHROME_SETTINGS,
+//                         safe_browsing::WarningAction::CHANGE_PASSWORD);
 }
 
 void ChangePasswordHandler::UpdateChangePasswordCardVisibility() {
-  FireWebUIListener(
-      "change-password-visibility",
-      base::Value(service_->IsWarningEnabled() &&
-                  safe_browsing::ChromePasswordProtectionService::
-                      ShouldShowChangePasswordSettingUI(profile_)));
+//  FireWebUIListener(
+//      "change-password-visibility",
+//      base::Value(service_->IsWarningEnabled() &&
+//                  safe_browsing::ChromePasswordProtectionService::
+//                      ShouldShowChangePasswordSettingUI(profile_)));
 }
 
 }  // namespace settings
--- a/chrome/browser/ui/blocked_content/popup_blocker.cc
+++ b/chrome/browser/ui/blocked_content/popup_blocker.cc
@@ -92,12 +92,12 @@ bool MaybeBlockPopup(content::WebContent
   auto* popup_blocker = PopupBlockerTabHelper::FromWebContents(web_contents);
   if (popup_blocker && block_type != PopupBlockType::kNotBlocked) {
     popup_blocker->AddBlockedPopup(params, window_features, block_type);
-    if (safe_browsing::AdPopupTrigger::FromWebContents(web_contents)) {
-      content::RenderFrameHost* source_frame =
-          GetSourceFrameForPopup(params, open_url_params, web_contents);
-      safe_browsing::AdPopupTrigger::FromWebContents(web_contents)
-          ->PopupWasBlocked(source_frame);
-    }
+//    if (safe_browsing::AdPopupTrigger::FromWebContents(web_contents)) {
+//      content::RenderFrameHost* source_frame =
+//          GetSourceFrameForPopup(params, open_url_params, web_contents);
+//      safe_browsing::AdPopupTrigger::FromWebContents(web_contents)
+//          ->PopupWasBlocked(source_frame);
+//    }
     return true;
   }
   return false;
--- a/chrome/browser/ui/browser.cc
+++ b/chrome/browser/ui/browser.cc
@@ -1316,10 +1316,10 @@ void Browser::OnDidBlockNavigation(conte
       framebust_helper->AddBlockedUrl(blocked_url, base::BindOnce(on_click));
     }
   }
-  if (auto* trigger =
-          safe_browsing::AdRedirectTrigger::FromWebContents(web_contents)) {
-    trigger->OnDidBlockNavigation(initiator_url);
-  }
+//  if (auto* trigger =
+//          safe_browsing::AdRedirectTrigger::FromWebContents(web_contents)) {
+//    trigger->OnDidBlockNavigation(initiator_url);
+//  }
 }
 
 content::PictureInPictureResult Browser::EnterPictureInPicture(
